import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id "com.diffplug.gradle.spotless" version "3.16.0"
    id "org.jetbrains.dokka" version "0.9.17"
    id 'maven-publish'
}

group 'dockerdaemon'
version '1.0'

repositories {
    jcenter()

    // We need that for more extension functions for Kotlin classes in the stdlib
    maven {
        url  "https://dl.bintray.com/lukaszimmermann/lukaszimmermann"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'kotlinext', name: 'string', version: '3.0'

    // Use the Kotlin test library
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

apply plugin: 'jacoco'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

spotless {
    kotlin {
        ktlint()
    }
}

dokka {
    outputFormat = "html"
    outputDirectory = "$buildDir/javadoc"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

/*
 * Publish as Maven Artifact
 */
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/libs/data-1.0.pom")
    }
}

/*
 * Enable source and javadoc for Maven publish
 */
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
